Starting audit...
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:12:20: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:16:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'calculateHPLimit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'calculateHPLimit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:16:35: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:17:16: '0.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:17:45: '0.01f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:25:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:25:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:25:41: 'knight' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:28:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:28:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:29:45: '1.1f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:31:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:31:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:32:45: '1.15f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:35:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:35:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:36:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:39:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:40:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:12:17: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:21:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:22:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:22:41: 'knight' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:23:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:26:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:27:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:28:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:31:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:32:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:33:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:36:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:37:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:38:45: '0.95f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:41:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:42:60: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:3: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:7:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:8:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:9:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:10:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:12:19: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:21:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:22:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:23:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:26:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:27:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:28:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:31:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:32:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:32:45: 'pyromancer' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:33:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:36:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:37:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:38:45: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:41:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:42:66: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:12:22: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:21:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:22:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:23:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:26:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:27:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:28:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:31:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:32:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:32:45: 'pyromancer' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:33:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:36:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:37:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:38:45: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:41:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:42:69: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:12:20: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:21:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:22:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:23:45: '1.4f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:26:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:27:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:28:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:31:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:32:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:33:45: '1.3f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:36:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:37:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:37:41: 'wizard' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:41:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:42:59: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:44:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:44:31: '0.7f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:45:31: '0.7f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:12:18: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:21:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:22:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:23:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:26:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:27:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:28:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:31:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:32:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:33:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:36:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:37:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:37:41: 'wizard' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:38:45: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:41:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:42:57: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:12:22: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:21:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:22:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:23:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:26:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:27:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:27:40: 'rogue' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:28:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:31:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:32:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:33:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:36:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:37:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:38:45: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:41:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:42:74: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:5: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:12:21: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:21:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:22:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:23:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:26:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:27:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:27:40: 'rogue' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:28:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:31:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:32:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:33:45: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:36:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:37:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:38:45: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:41:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:42:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:11:18: Parameter o1 should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:11:27: Parameter o2 should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:11:36: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:7: Class Battleground should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:18:22: 'battleground' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:20:30: Name 'LineByLine' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:29:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:6:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:3: Class LocationFactory should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:11:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:17:36: Parameter locationType should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:18:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:21:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:24:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:27:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:4:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:4:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:4:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:5: Class LevelCalculator should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:13:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:18:17: Name 'LevelUp' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:18:25: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:19:25: '250' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:19:49: '50' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:20:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:5: Class XPCalculator should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:12:35: Parameter winner should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:12:48: Parameter loser should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:13:23: '200' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:13:70: '40' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:15:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:24:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/HPCalculator.java:3: Class HPCalculator should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/HPCalculator.java:11:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:16:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'getRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'getRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:16:23: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:20:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'setRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'setRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:20:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:20:25: '(' is followed by whitespace. [ParenPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:20:26: Parameter row should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:24:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'getColumn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'getColumn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:28:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'setColumn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'setColumn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:28:27: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:28:28: Parameter column should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:28:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:32:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'getLoc' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'getLoc' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:36:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:37:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:38:41: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:23:10: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:23:24: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:44:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'move' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'move' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:44:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:45: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:49: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:54: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:59: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:64: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:72:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:76:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:76:26: Parameter level should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:80:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:84:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:84:23: Parameter xp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:88:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getInitialHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getInitialHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:92:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getCoords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getCoords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:96:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setCoords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setCoords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:96:27: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:100:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getMoves' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getMoves' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:8: Class HeroFactory should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:16:28: Parameter heroType should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:18:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:20:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:22:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:24:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:26:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:34:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:9:24: '500' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:13:16: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:13:47: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:21:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'acceptFight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'acceptFight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:22:29: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:27:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:32:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:37:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:42:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:47:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:48:36: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:52:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:54:30: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:55:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:59:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:63:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:63:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:13:12: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:13:43: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:21:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'acceptFight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'acceptFight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:22:29: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:27:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:31:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:35:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:39:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:43:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:44:36: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:48:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:50:26: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:51:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:55:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:59:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:59:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:14:11: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:14:42: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:22:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'acceptFight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'acceptFight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:23:29: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:28:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:33:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:38:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:43:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:48:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:49:36: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:53:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:55:25: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:56:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:60:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:64:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:64:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:13:12: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:13:43: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:21:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'acceptFight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'acceptFight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:22:29: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:27:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:31:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:35:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:39:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:43:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:44:36: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:48:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:50:26: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:51:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:55:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:59:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:59:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/RogueConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/RogueConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/WizardConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/WizardConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/KnightConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/KnightConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/PyromancerConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/PyromancerConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:7:5: Class 'GameLogic' looks like designed for extension (can be subclassed), but the method 'startGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameLogic' final or making the method 'startGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:10: Class Game should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:40:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:20:5: Class 'GameInputLoader' looks like designed for extension (can be subclassed), but the method 'load' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInputLoader' final or making the method 'load' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:20:57: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:45:23: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:57: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:62:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Writer.java:16:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'writeToFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'writeToFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Writer.java:26:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'getOutputFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'getOutputFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:3:8: Unused import - java.io.FileNotFoundException. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:6:14: Name 'main' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:7:24: Method Name 'main' must not equal the enclosing class name. [MethodName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:7:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:24:12: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:71:12: Redundant 'final' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:71:39: Parameter input should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:77:29: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:78:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:79:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:80:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:81:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:82:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:83:58: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:84:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:85:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:1:9: Name 'Test' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:9:14: Name 'test' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:10:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:28: Line is longer than 100 characters (found 101). [LineLength]
Audit done.
Checkstyle ends with 329 errors.
