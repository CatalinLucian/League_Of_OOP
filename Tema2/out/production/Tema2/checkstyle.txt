Starting audit...
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:10:8: Unused import - battleground.Land. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:12: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:14:8: Unused import - javax.print.DocFlavor. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:21:20: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:25:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'calculateHPLimit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'calculateHPLimit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:25:35: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:26:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:26:33: '20' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:27:20: '0.4f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:29:21: '0.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:29:50: '0.01f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:33:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'teoreticMaxHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'teoreticMaxHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:33:30: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:34:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:36:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:38:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:40:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:51:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:51:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:51:41: 'knight' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:52:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:59:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:59:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:60:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:65:45: '1.1f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:67:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:67:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:68:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:72:45: '1.15f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:75:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:75:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:76:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:81:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:84:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:85:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:89:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:90:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:94:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:109: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:110: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:117:29: '900' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:118:30: '900' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:119:50: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:120:50: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Execute.java:122:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:8: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:16:17: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:25:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:26:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:26:41: 'knight' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:28:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:31:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:32:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:34:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:37:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:38:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:40:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:43:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:44:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:46:45: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:49:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:50:60: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:54:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/knight/Slam.java:55:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:4: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:7:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:8:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:9:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:10:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:11:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:12:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Skill.java:13:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:8: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:16:19: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:25:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:26:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:30:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:33:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:34:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:38:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:41:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:42:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:42:45: 'pyromancer' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:46:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:49:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:50:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:54:45: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:57:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:59:66: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:63:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:64:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:68:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'getBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'getBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:72:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'setBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'setBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:72:31: Parameter baseDamage should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:76:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'getEffect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'getEffect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:80:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'setEffect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'setEffect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:81: Line is longer than 100 characters (found 164). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Ignite.java:81:43: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:6: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:13:22: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:22:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:23:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:25:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:28:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:29:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:31:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:34:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:35:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:35:45: 'pyromancer' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:37:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:40:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:41:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:43:45: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:46:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:48:69: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:52:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/pyromancer/Fireblast.java:53:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:6: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:13:20: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:22:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:23:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:26:45: '1.4f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:29:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:30:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:32:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:35:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:36:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:38:45: '1.3f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:41:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:42:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:42:41: 'wizard' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:46:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:48:59: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:52:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:52:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:56:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'calculateDmg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'calculateDmg' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Deflect.java:56:29: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:3:8: Unused import - Constants.KnightConstants. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:7: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:14:18: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:30:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:31:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:33: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:33:36: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:33:102: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:36:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:37:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:39: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:39:36: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:39:100: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:42:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:43:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:45: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:45:36: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:45:110: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:48:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:49:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:49:41: 'wizard' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:51: Line is longer than 100 characters (found 130). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:51:36: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:51:102: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:54:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:55:57: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:59:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/wizard/Drain.java:59:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/DamagePerTurn.java:12:5: Class 'DamagePerTurn' looks like designed for extension (can be subclassed), but the method 'getDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamagePerTurn' final or making the method 'getDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/DamagePerTurn.java:16:5: Class 'DamagePerTurn' looks like designed for extension (can be subclassed), but the method 'setDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DamagePerTurn' final or making the method 'setDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/DamagePerTurn.java:16:27: Parameter damage should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/ParalysisOvertime.java:3:8: Unused import - Constants.RogueConstants. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/ParalysisOvertime.java:5:8: Unused import - abilities.Skill. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/ParalysisOvertime.java:6:8: Unused import - characters.Knight. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/ParalysisOvertime.java:7:8: Unused import - characters.Pyromancer. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/ParalysisOvertime.java:8:8: Unused import - characters.Rogue. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/ParalysisOvertime.java:9:8: Unused import - characters.Wizard. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/damage/ParalysisOvertime.java:13:30: Parameter noOfRounds should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:3:8: Unused import - Constants.PyromancerConstants. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:9: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:14:30: '3' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:20:22: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:21:15: '3' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:30:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:31:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:34:45: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:37:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:38:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:38:40: 'rogue' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:41:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:44:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:45:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:48:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:51:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:52:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:55:45: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:58:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:60:74: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:64:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:64:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:68:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'getEffect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'getEffect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:72:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'setEffect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'setEffect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Paralysis.java:73: Line is longer than 100 characters (found 166). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:7: Using the '.*' form of import should be avoided - characters.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:15:21: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:24:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:25:34: Parameter knight should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:27:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:29:49: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:29:77: '1.5f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:32:45: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:35:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:36:34: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:36:40: 'rogue' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:38:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:40:49: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:40:77: '1.5f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:42:45: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:45:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:46:34: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:48:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:50:49: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:50:78: '1.5f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:52:45: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:55:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'applyRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'applyRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:56:34: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:58:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:60:49: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:60:78: '1.5f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:62:45: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:62:71: ')' is preceded with whitespace. [ParenPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:65:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'modifyBaseDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'modifyBaseDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:67:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:71:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'acceptCellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'acceptCellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:72:37: Parameter location should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:77: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:77:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/rogue/Backstab.java:77:16: '3' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:3:8: Unused import - battleground.Location. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:11:18: Parameter first should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:11:30: Parameter second should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:16:5: Class 'Fight' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fight' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:21:13: Name 'TotalDamageTo1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:22:13: Name 'TotalDamageTo2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:27:5: Class 'Fight' looks like designed for extension (can be subclassed), but the method 'updateHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fight' final or making the method 'updateHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:27:26: Parameter damageTo1 should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:27:41: Parameter damageTo2 should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:30:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:33:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:38:5: Class 'Fight' looks like designed for extension (can be subclassed), but the method 'fightAfterMath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fight' final or making the method 'fightAfterMath' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:40:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/abilities/Fight.java:43:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:5:8: Unused import - java.util.Vector. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:7: Class Battleground should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:17:22: 'battleground' hides a field. [HiddenField]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Battleground.java:21:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:11:8: Unused import - characters.Knight. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:12:8: Unused import - characters.Pyromancer. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:13:8: Unused import - characters.Rogue. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:14:8: Unused import - characters.Wizard. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:19:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:25:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:26:31: Parameter execute should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:27:16: '1.15f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:30:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:31:31: Parameter slam should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:32:16: '1.15f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:35:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:36:31: Parameter fireblast should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:40:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:41:31: Parameter ignite should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:45:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:46:31: Parameter drain should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:50:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:51:31: Parameter deflect should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:55:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:56:31: Parameter backstab should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:60:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Land.java:61:31: Parameter paralysis should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:3: Class LocationFactory should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:11:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:17:36: Parameter locationType should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:18:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:21:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:24:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/LocationFactory.java:27:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:11:8: Unused import - characters.Knight. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:12:8: Unused import - characters.Pyromancer. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:13:8: Unused import - characters.Rogue. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:14:8: Unused import - characters.Wizard. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:19:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:24:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:25:31: Parameter execute should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:29:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:30:31: Parameter slam should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:34:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:35:31: Parameter fireblast should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:39:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:40:31: Parameter ignite should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:44:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:45:31: Parameter drain should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:46:16: '1.1f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:49:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:50:31: Parameter deflect should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:51:16: '1.1f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:54:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:55:31: Parameter backstab should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:59:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Desert.java:60:31: Parameter paralysis should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:11:8: Unused import - characters.Knight. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:12:8: Unused import - characters.Pyromancer. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:13:8: Unused import - characters.Rogue. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:14:8: Unused import - characters.Wizard. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:17:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:23:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:24:31: Parameter execute should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:28:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:29:31: Parameter slam should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:33:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:34:31: Parameter fireblast should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:35:16: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:38:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:39:31: Parameter ignite should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:40:16: '1.25f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:43:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:44:31: Parameter drain should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:48:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:49:31: Parameter deflect should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:53:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:54:31: Parameter backstab should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:58:5: Class 'Volcanic' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Volcanic' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Volcanic.java:59:31: Parameter paralysis should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:11:8: Unused import - characters.Knight. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:12:8: Unused import - characters.Pyromancer. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:13:8: Unused import - characters.Rogue. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:14:8: Unused import - characters.Wizard. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:17:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:22:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:23:31: Parameter execute should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:27:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:28:31: Parameter slam should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:32:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:33:31: Parameter fireblast should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:37:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:38:31: Parameter ignite should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:42:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:43:31: Parameter drain should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:47:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:48:31: Parameter deflect should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:52:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:53:31: Parameter backstab should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:54:16: '1.15f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:57:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'cellModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'cellModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:58:31: Parameter paralysis should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Woods.java:59:16: '1.15f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:11:8: Unused import - characters.Knight. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:12:8: Unused import - characters.Pyromancer. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:13:8: Unused import - characters.Rogue. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:14:8: Unused import - characters.Wizard. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:17:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:18:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:19:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:20:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:21:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:22:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:23:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/battleground/Location.java:24:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:5: Class LevelCalculator should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:13:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:18:17: Name 'LevelUp' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:18:25: Parameter hero should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:19:25: '250' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:19:49: '50' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/LevelCalculator.java:20:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:5: Class XPCalculator should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:12:35: Parameter winner should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:12:48: Parameter loser should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:13:23: '200' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:13:70: '40' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:15:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/XPCalculator.java:24:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/HPCalculator.java:3: Class HPCalculator should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/calculators/HPCalculator.java:11:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:18:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'getRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'getRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:18:23: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:22:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'setRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'setRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:22:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:22:25: '(' is followed by whitespace. [ParenPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:22:26: Parameter row should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:26:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'getColumn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'getColumn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:30:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'setColumn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'setColumn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:30:27: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:30:28: Parameter column should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:30:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:34:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'getLoc' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'getLoc' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:38:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:39:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:40:41: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:44:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:44:27: Parameter o should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:45: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:46: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:47:39: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:51:5: Class 'PositionOnBattleground' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PositionOnBattleground' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/PositionOnBattleground.java:51:5: Definition of 'hashCode()' without corresponding definition of 'equals()'. [EqualsHashCode]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:8: Using the '.*' form of import should be avoided - battleground.*. [AvoidStarImport]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:33:10: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:33:41: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:41:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:45:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:45:26: Parameter level should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:49:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:53:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:53:23: Parameter xp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:57:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getInitialHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getInitialHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:61:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getCoords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getCoords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:65:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setCoords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setCoords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:65:27: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:69:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getMoves' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getMoves' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:73:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setMoves' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setMoves' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:73:26: Parameter moves should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:82:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getEffectSuffered' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getEffectSuffered' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:86:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setEffectSuffered' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setEffectSuffered' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:86:35: Parameter effectSuffered should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:90:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'sufferEffect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'sufferEffect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:91:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:92: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:92:107: '0.8f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:94:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:95: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:95:107: '0.9f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:97:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:98: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:98:107: '1.05f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:101:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:102: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:102:107: '1.2f' is a magic number. [MagicNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:105:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:110:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setIsDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setIsDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:114:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:118:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:126:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:128:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Hero.java:131: Line is longer than 100 characters (found 157). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:8: Class HeroFactory should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:16:28: Parameter heroType should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:18:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:20:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:22:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:24:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:26:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/HeroFactory.java:34:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:14:16: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:14:47: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:25:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:26:35: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:30:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getFirstSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getFirstSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:35:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getSecondSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getSecondSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:41:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:45:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Pyromancer.java:45:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:14:12: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:14:43: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:24:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:25:35: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:29:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getFirstSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getFirstSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:34:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getSecondSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getSecondSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:39:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:43:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Wizard.java:43:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:15:11: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:15:42: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:26:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:27:35: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:31:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getFirstSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getFirstSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:36:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getSecondSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getSecondSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:42:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:46:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Rogue.java:46:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:7:8: Unused import - battleground.Land. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:8:8: Unused import - battleground.Location. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:16:12: Parameter coords should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:16:43: Parameter initialHP should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:27:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'acceptRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'acceptRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:28:35: Parameter skill should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:34:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:38:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:38:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:42:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getFirstSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getFirstSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/characters/Knight.java:47:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getSecondSkill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getSecondSkill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/RogueConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/RogueConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/WizardConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/WizardConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/KnightConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/KnightConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/PyromancerConstants.java:1:9: Name 'Constants' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Constants/PyromancerConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:5:8: Unused import - characters.HeroManager. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:13:22: Parameter game should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:17:5: Class 'GameLogic' looks like designed for extension (can be subclassed), but the method 'startGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameLogic' final or making the method 'startGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:26:5: Class 'GameLogic' looks like designed for extension (can be subclassed), but the method 'playRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameLogic' final or making the method 'playRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:28:15: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:30:19: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:37:15: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:39:23: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:40: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:41: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameLogic.java:52:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:9:8: Unused import - java.util.HashMap. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:11:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:18:10: Parameter input should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:46:43: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:70:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getInput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getInput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:75:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getHeroes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getHeroes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Game.java:79:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getBattleground' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getBattleground' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:20:5: Class 'GameInputLoader' looks like designed for extension (can be subclassed), but the method 'load' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInputLoader' final or making the method 'load' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:20:57: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:45:23: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:57: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInputLoader.java:62:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Writer.java:17:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'writeToFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'writeToFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/Writer.java:26:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'getOutputFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'getOutputFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:3:8: Unused import - java.io.FileNotFoundException. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:6:14: Name 'main' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:7:24: Method Name 'main' must not equal the enclosing class name. [MethodName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/main.java:7:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:24:12: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:71:12: Redundant 'final' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:71:39: Parameter input should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:77:29: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:78:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:79:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:80:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:81:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:82:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:83:58: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:84:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/main/GameInput.java:85:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameLogic.java:1:9: Name 'Main' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameLogic.java:5:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameLogic.java:9:5: Class 'GameLogic' looks like designed for extension (can be subclassed), but the method 'startGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameLogic' final or making the method 'startGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameLogic.java:18:58: Must have at least one statement. [EmptyBlock]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Game.java:1:9: Name 'Main' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Game.java:10: Class Game should be declared as final. [FinalClass]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Game.java:40:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInputLoader.java:1:9: Name 'Main' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInputLoader.java:20:5: Class 'GameInputLoader' looks like designed for extension (can be subclassed), but the method 'load' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInputLoader' final or making the method 'load' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInputLoader.java:20:57: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInputLoader.java:45:23: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInputLoader.java:57: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInputLoader.java:62:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Writer.java:1:9: Name 'Main' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Writer.java:3:8: Unused import - characters.Hero. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Writer.java:8:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Writer.java:19:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'writeToFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'writeToFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Writer.java:27:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'getOutputFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'getOutputFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Main.java:1:9: Name 'Main' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Main.java:5:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/Main.java:6:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:1:9: Name 'Main' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:24:12: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:71:12: Redundant 'final' modifier. [RedundantModifier]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:71:39: Parameter input should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:77:29: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:78:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:79:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:80:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:81:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:82:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:83:58: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:84:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Main/GameInput.java:85:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:1:9: Name 'Test' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:6:8: Unused import - battleground.Battleground. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:8:8: Unused import - java.io.FileNotFoundException. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:9:8: Unused import - java.io.FileWriter. [UnusedImports]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:12:14: Name 'test' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:13:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/ctl/Desktop/POO/GtRepo/Tema2/src/Test/test.java:31: Line is longer than 100 characters (found 101). [LineLength]
Audit done.
Checkstyle ends with 579 errors.
